@model ProductDetailsModel.ProductPriceModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@inject IWorkContext workContext
@if (!Model.CustomerEntersPrice)
{
    <div class="prices clearfix">
        @if (Model.CallForPrice)
        {
            @*call for price*@
            <div class="product-price call-for-price">
                <span>@T("Products.CallForPrice")</span>
            </div>
        }
        else
        {
            if (!string.IsNullOrWhiteSpace(Model.OldPrice))
            {
                @*old price*@
                <div class="old-product-price">
                    <span>@T("Products.Price.OldPrice"):</span>
                    <span>@Model.OldPrice</span>
                </div>
            }
            if (!string.IsNullOrWhiteSpace(Model.PriceWithDiscount))
            {
                @*discounted price*@
                <div class="product-price discounted-price float-left mr-4">
                    <span class="text-danger price-value-@(Model.ProductId)">
                        @Html.Raw(Model.PriceWithDiscount)
                    </span>
                </div>
            }
            <div class="float-left @(string.IsNullOrWhiteSpace(Model.PriceWithDiscount) ? "product-price" : "non-discounted-price")">
                @if (string.IsNullOrWhiteSpace(Model.PriceWithDiscount))
                {
                    <span id="price-value-@(Model.ProductId)" class="current-price price-value-@(Model.ProductId)">@Html.Raw(Model.Price)</span>
                }
                else
                {
                    <del>@Html.Raw(Model.Price)</del>
                }
            </div>

            if (Model.DisplayTaxShippingInfo)
            {
                var inclTax = await workContext.GetTaxDisplayTypeAsync() == TaxDisplayType.IncludingTax;
                //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                //of course, you can modify appropriate locales to include VAT info there
                <div class="tax-shipping-info">
                    @T(inclTax ? "Products.Price.TaxShipping.InclTax" : "Products.Price.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = await Html.GetTopicSeNameAsync("shippinginfo") }))
                </div>
            }
        }
    </div>
}
