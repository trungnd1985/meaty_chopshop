@model ProductOverviewModel
@using Nop.Core
@using Nop.Core.Domain.Catalog
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@inject CatalogSettings catalogSettings
@inject IWorkContext workContext
@{
    //prepare "Add to cart" AJAX link
    var addtocartlink = "";
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;
    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
    }
    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity });
    }

    var addtowishlistlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist, quantity = quantity });
    var addtocomparelink = Url.RouteUrl("AddProductToCompare", new { productId = Model.Id });
}

<div class="card product-item" data-productid="@Model.Id">
    <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" title="@Model.DefaultPictureModel.Title">
        <img class="card-img-top" alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title" />
    </a>
    <div class="card-body">
        <h5 class="card-title"><a class="product-title" href="@Url.RouteUrl("Product", new {SeName = Model.SeName})">@Model.Name</a></h5>
        <div class="card-text">
            <ul class="list-unstyled">
                @if (!string.IsNullOrWhiteSpace(Model.CategoryName))
                {
                    <li>
                        <i class="fas fa-tags"></i>@Model.CategoryName
                    </li>
                }
            </ul>

            @if (!string.IsNullOrEmpty(Model.ProductPrice.OldPrice))
            {
                <span class="price old-price">@Model.ProductPrice.OldPrice</span>
            }
            <span class="price actual-price">@Model.ProductPrice.Price</span>
        </div>
        @if (!Model.ProductPrice.DisableBuyButton)
        {
            var addToCartText = T("ShoppingCart.AddToCart").Text;
            if (Model.ProductPrice.IsRental)
            {
                addToCartText = T("ShoppingCart.Rent").Text;
            }
            if (Model.ProductPrice.AvailableForPreOrder)
            {
                addToCartText = T("ShoppingCart.PreOrder").Text;
            }
            <button type="button" class="button-2 product-box-add-to-cart-button btn-block btn btn-primary" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink');return false;">@(addToCartText)</button>
        }

        @if (!Model.ProductPrice.DisableWishlistButton)
        {
            <button type="button" class="button-2 add-to-wishlist-button btn-block btn btn-outline-light" title="@T("ShoppingCart.AddToWishlist")" onclick="AjaxCart.addproducttocart_catalog('@addtowishlistlink');return false;">@T("ShoppingCart.AddToWishlist")</button>
        }
    </div>
</div>
