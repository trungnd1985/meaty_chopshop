@model NewsCategoryModel
@using Nop.Core.Domain.Common
@using Nop.Core.Domain.Seo
@inject Nop.Core.IWebHelper webHelper
@inject SeoSettings seoSettings
@inject CommonSettings commonSettings
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(!string.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    //meta
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);
    //page class
    Html.AppendPageCssClassParts("html-category-page");

    if (seoSettings.CanonicalUrlsEnabled)
    {
        var categoryUrl = Url.RouteUrl("NewsCategory", new { SeName = Model.SeName }, webHelper.GetCurrentRequestProtocol()).ToLowerInvariant();
        Html.AddCanonicalUrlParts(categoryUrl, seoSettings.QueryStringInCanonicalUrlsEnabled);
    }

    var breadcrumbDelimiter = commonSettings.BreadcrumbDelimiter;
}
@section Breadcrumb{

    <div class="banner-news mb-5">
        <div class="container">
            <div class="row align-items-center" style="min-height:400px">
                <div class="col-12">
                    <h1>@Model.Name</h1>
                    <ul class="list-inline">
                        <li class="list-inline-item">
                            <a href="@Url.RouteUrl("Homepage")" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a>
                        </li>
                        <li class="list-inline-item">
                            <span class="fas fa-angle-double-right"></span>
                        </li>
                        @foreach (var breadcrumb in Model.CategoryBreadcrumb)
                        {
                            <li class="list-inline-item">
                                <a href="@Url.RouteUrl("NewsCategory", new { SeName = breadcrumb.SeName } )" title="@breadcrumb.Name">@breadcrumb.Name</a>
                            </li>
                            @if (breadcrumb.Id != Model.Id)
                            {
                                <li class="list-inline-item">
                                    <span class="fas fa-angle-double-right"></span>
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>

}
<div class="container mb-5 page category-page">
    <div class="row">
        <div class="col-2">
            <div class="block block-account-navigation card">
                <div class="title card-header bg-menu ">
                    <strong class="text-white">@T("Category")</strong>
                </div>
                <ul class="list-group list-group-flush">
                    @foreach (var item in Model.SubCategories)
                    {
                        <li class="list-group-item">
                            <a href="@Url.RouteUrl("NewsCategory", new { SeName = item.SeName })">@(item.Name)</a>
                        </li>
                    }
                </ul>
            </div>

        </div>
        <div class="col-10">
            <div class="row">
                @foreach (var item in Model.NewsItems.News)
                {
                    <div class="col-3">
                        <div class="card">
                            <a href="@Url.RouteUrl("NewsItem", new { SeName = item.SeName })"><img src="/images/thumbs/default-image_450.png" class="card-img-top" alt="@item.Title"></a>
                            <div class="card-body">
                                <h5 class="card-title"><a href="@Url.RouteUrl("NewsItem", new { SeName = item.SeName })">@item.Title</a></h5>
                                <p class="card-text">
                                    @item.Short
                                </p>
                                <div class="float-left">

                                </div>
                                <div class="float-right">
                                    @item.CreatedOn.ToString("D")
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            @{
                var pager = Html.Pager(Model.NewsItems)
                                .QueryParam("pagenumber")
                                // for search page
                                .BooleanParameterName("advs")
                                .BooleanParameterName("isc")
                                .BooleanParameterName("sid")
                                .MainUlCssClass("pagination")
                                .CurrentPageCssClass("page-item active")
                                .IndividualPageCssClass("page-item")
                                .RenderEmptyParameters(true);
            }
            @if (pager != null)
            {
                <div class="row">
                    <div class="col">
                        @pager
                    </div>
                </div>
            }
        </div>
    </div>    
</div>
