@model CatalogProductsModel

@if (Model.Products.Count <= 0 &&
  !Model.PriceRangeFilter.Enabled &&
  !Model.SpecificationFilter.Enabled &&
  !Model.ManufacturerFilter.Enabled)
{
    return;
}

<div class="product-selectors float-right">
    @*view mode*@
    <ul class="list-inline">


        @if (Model.AllowProductViewModeChanging)
        {
            @if (Model.AvailableViewModes.Count > 1)
            {
                var gridMode = Model.AvailableViewModes[0];
                var listMode = Model.AvailableViewModes[1];
                <li class="list-inline-item"><a class="viewmode-icon grid @if (gridMode.Selected){<text>selected</text>}" data-viewmode="@gridMode.Value" title="@gridMode.Text"><i class="fas fa-grip-horizontal"></i></a></li>
                <li class="list-inline-item"><a class="viewmode-icon list @if (listMode.Selected){<text>selected</text>}" data-viewmode="@listMode.Value" title="@listMode.Text"><i class="fas fa-list"></i></a></li>
            }
            <script asp-location="Footer">
                $(document).ready(function () {
                    var $viewModeEls = $('[data-viewmode]');
                    $viewModeEls.on('click', function () {
                        if (!$(this).hasClass('selected')) {
                            $viewModeEls.toggleClass('selected');
                            CatalogProducts.getProducts();
                        }
                        return false;
                    });

                    $(CatalogProducts).on('before', function (e) {
                        var $viewModeEl = $('[data-viewmode].selected');
                        if ($viewModeEl) {
                            e.payload.urlBuilder
                                .addParameter('viewmode', $viewModeEl.data('viewmode'));
                        }
                    });
                });
            </script>
        }

        @if (Model.AllowProductSorting)
        {
            <li class="list-inline-item">
                @Html.DropDownList("products-orderby", Model.AvailableSortOptions, new { aria_label = T("Catalog.OrderBy.Label") })
                <script asp-location="Footer">
                    $(document).ready(function () {
                        var $orderByEl = $('#products-orderby');
                        $orderByEl.on('change', function () {
                            CatalogProducts.getProducts();
                        });

                        $(CatalogProducts).on('before', function (e) {
                            e.payload.urlBuilder
                                .addParameter('orderby', $orderByEl.val());
                        });
                    });
                </script>
            </li>
        }
    </ul>
</div>